{"version":3,"sources":["components/UI/Mymodal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/input/MyInput.module.css","components/UI/Loader/Loader.module.css","components/UI/button/MyButton.jsx","context/index.js","components/UI/Navbar/Navbar.jsx","pages/About.jsx","hooks/usePost.js","hooks/useFetching.js","API/PostService.js","components/utils/pages.js","components/UI/Mymodal/MyModal.jsx","components/UI/input/MyInput.js","components/UI/select/MySelect.js","components/PostFilter.jsx","components/PostItem.jsx","components/PostList.jsx","components/UI/Loader/Loader.jsx","components/UI/Pagination/Pagination.jsx","components/PostForm.jsx","pages/Posts.jsx","components/router/router.js","hooks/useObserver.js","pages/PostIdPage.jsx","pages/Login.jsx","components/AppRouter.jsx","App.js","index.js"],"names":["module","exports","MyButton","children","props","className","classes","myBtn","AuthContext","createContext","Navbar","useContext","setIsAuth","isAuth","onClick","localStorage","removeItem","to","About","usePosts","posts","sort","query","sortedPosts","useMemo","console","log","a","b","localeCompare","useSortedPosts","filter","post","title","toLowerCase","includes","useFetching","callback","useState","isLoading","setIsLoading","error","setError","id","message","PostService","limit","page","axios","get","params","_limit","_page","response","getPageCount","totalCount","Math","ceil","MyModal","visible","setVisible","rootClasses","cl","myModal","push","active","join","e","stopPropagation","myModalContent","MyInput","myInput","MySelect","options","defaultValue","value","onChange","event","target","disabled","map","option","name","PostFilter","setFilter","placeholder","style","margin","selectedSort","PostItem","router","useHistory","body","remove","PostList","length","textAlign","index","timeout","classNames","number","Loader","s","loader","Pagination","totalPages","changePage","pageArray","result","i","getPagesArray","p","PostForm","create","setPost","action","type","preventDefault","newPost","Date","now","Posts","privateRoutes","path","component","exact","setPosts","modal","setModal","sortedAndSearchedPosts","setTotalPage","setLimit","setPage","getAll","data","headers","fetchPosts","isPostLoading","postError","lastElement","useRef","ref","canLoad","observer","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","marginTop","height","background","display","justifyContent","useParams","getById","fetchPostById","comments","setComments","getCommentsByPostId","fetchCommentsPostById","comm","email","publicRoutes","onSubmit","setItem","AppRouter","route","App","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19a1f907.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__27klM\",\"myModalContent\":\"MyModal_myModalContent__27ntt\",\"active\":\"MyModal_active__3V6fL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__1qRnt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__3dZV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1aa0W\",\"rotate\":\"Loader_rotate__18Xme\"};","import React from 'react';\r\nimport classes from './MyButton.module.css'\r\nconst MyButton = ({children,...props}) => {\r\n    return (\r\n        <button {...props} className={classes.myBtn}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;","import {createContext} from \"react\";\r\n\r\nexport const AuthContext = createContext(null)","import React, {useContext} from 'react';\r\nimport {BrowserRouter, Link} from \"react-router-dom\";\r\nimport MyButton from \"../button/MyButton\";\r\nimport {AuthContext} from \"../../../context\";\r\n\r\nconst Navbar = () => {\r\n    const {isAuth, setIsAuth} = useContext(AuthContext)\r\n    const logout = () => {\r\n        setIsAuth(false)\r\n        localStorage.removeItem('auth')\r\n    }\r\n    return (\r\n        <div className='navbar'>\r\n            <MyButton onClick={logout}>Выйти</MyButton>\r\n            <div className='navbar__links'>\r\n                <Link to=\"/about\">О сайте</Link>\r\n                <Link to=\"/posts\">Посты</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n       <h1>\r\n           Это Приложение создано 08.21 kljljkljkljkljklj\r\n       </h1>\r\n    );\r\n};\r\n\r\nexport default About;","import {useMemo} from \"react\";\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n    const sortedPosts = useMemo(() => {\r\n        console.log(\"getSortedPosts\")\r\n        if (sort) {\r\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\r\n        }\r\n        return posts\r\n    }, [sort, posts])\r\n\r\n    return sortedPosts\r\n}\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n\r\n    const sortedPosts = useSortedPosts(posts, sort)\r\n    const sortedAndSearchedPosts = useMemo(() => {\r\n        console.log(\"sortedAndSearchedPosts\")\r\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()))\r\n    }, [query, sortedPosts])\r\n\r\n    return sortedAndSearchedPosts\r\n}","import {useState} from \"react\";\r\n\r\nexport const useFetching = (callback) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    const fetching = async (id) => {\r\n        try {\r\n            setIsLoading(true)\r\n            await callback(id)\r\n        } catch (e) {\r\n            setError(e.message)\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n    return [fetching, isLoading, error]\r\n}","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n    static async getAll(limit = 10, page = 1) {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n            params: {\r\n                _limit: limit,\r\n                _page: page\r\n            }\r\n        })\r\n        return response\r\n    }\r\n\r\n    static async getById(id) {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\r\n        return response\r\n    }\r\n\r\n    static async getCommentsByPostId(id) {\r\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\r\n        return response\r\n    }\r\n\r\n}","export const getPageCount = (totalCount, limit) => {\r\n    return Math.ceil(totalCount / limit)\r\n}\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n    let result = []\r\n    for (let i = 0; i < totalPages; i++) {\r\n        result.push(i + 1)\r\n    }\r\n    return result\r\n}","import React from 'react';\r\nimport cl from './MyModal.module.css'\r\n\r\nconst MyModal = ({children, visible, setVisible}) => {\r\n    const rootClasses = [cl.myModal]\r\n    if (visible) {\r\n        rootClasses.push(cl.active)\r\n    }\r\n    return (\r\n        <div onClick={() => setVisible(false)} className={rootClasses.join(' ')}>\r\n            <div onClick={(e) => e.stopPropagation()} className={cl.myModalContent}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyModal;","import React from 'react';\r\nimport classes from './MyInput.module.css'\r\nconst MyInput = (props) => {\r\n    return (\r\n        <input className={classes.myInput} {...props}/>\r\n    );\r\n};\r\n\r\nexport default MyInput;","import React from 'react';\r\nimport classes from './MySelect.module.css'\r\n\r\nconst MySelect = ({options, defaultValue, value, onChange}) => {\r\n    return (\r\n        <select\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n        >\r\n            <option disabled value=\"\">{defaultValue}</option>\r\n            {options.map(option =>\r\n                <option key={option.value} value={option.value}>\r\n                    {option.name}\r\n                </option>\r\n            )}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default MySelect;","import React from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MySelect from \"./UI/select/MySelect\";\r\n\r\nconst PostFilter = ({filter, setFilter}) => {\r\n    return (\r\n        <div>\r\n            <MyInput\r\n                value={filter.query}\r\n                onChange={e => setFilter({...filter, query: e.target.value})}\r\n                placeholder=\"Поиск..\"\r\n            />\r\n            <hr style={{margin: '15px 0'}}/>\r\n            <MySelect\r\n                value={filter.sort}\r\n                onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n                defaultValue=\"Сортировка\"\r\n                options={[\r\n                    {value: 'title', name: 'По названию'},\r\n                    {value: 'body', name: 'По описанию'}\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostFilter;","import React from 'react';\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst PostItem = (props) => {\r\n    const router = useHistory()\r\n    console.log(router)\r\n    return (\r\n        <div className='post'>\r\n            <div className=\"post__content\">\r\n                <strong>{props.post.id}. {props.post.title}</strong>\r\n                <div>\r\n                    {props.post.body}\r\n                </div>\r\n            </div>\r\n            <div className=\"post__btns\">\r\n                <MyButton onClick={() => router.push(`/posts/${props.post.id}`)}>\r\n                    Открыть\r\n                </MyButton>\r\n                <MyButton onClick={() => props.remove(props.post)}>\r\n                    Удалить\r\n                </MyButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;","import React, {useState} from 'react';\r\nimport PostItem from \"./PostItem\";\r\nimport CSSTransition from \"react-transition-group/cjs/CSSTransition\";\r\nimport TransitionGroup from \"react-transition-group/cjs/TransitionGroup\";\r\n\r\nconst PostList = ({posts, title, remove}) => {\r\n    if (!posts.length) {\r\n        return <h1 style={{textAlign: 'center'}}>Посты не найдены</h1>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center'}}>\r\n                {title}\r\n            </h1>\r\n            <TransitionGroup>\r\n                {\r\n                    posts.map((post, index) =>\r\n                        <CSSTransition\r\n                            key={post.id}\r\n                            timeout={500}\r\n                            classNames='post'\r\n                        >\r\n                            <PostItem\r\n                                remove={remove}\r\n                                number={index + 1}\r\n                                post={post}\r\n                            />\r\n                        </CSSTransition>\r\n                    )\r\n                }\r\n            </TransitionGroup>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;","import React from 'react';\r\nimport s from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={s.loader}>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport {getPagesArray} from \"../../utils/pages\";\r\n\r\nconst Pagination = ({totalPages,page,changePage}) => {\r\n    let pageArray = getPagesArray(totalPages)\r\n    return (\r\n        <div className='page__wrapper'>\r\n            {pageArray.map((p) =>\r\n                <span\r\n                    onClick={() => changePage(p)}\r\n                    key={p}\r\n                    className={page === p ? 'page page__current' : 'page'}\r\n                >\r\n                    {p}\r\n                </span>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, {useState} from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\n\r\nconst PostForm = ({create}) => {\r\n    const [post, setPost] = useState({\r\n        title: '',\r\n        body: ''\r\n    })\r\n    const addNewPost = (e) => {\r\n        e.preventDefault()\r\n        const newPost = {...post,id:Date.now()}\r\n        create(newPost)\r\n        setPost({title: '', body: ''})\r\n    }\r\n    return (\r\n        <form action=\"\">\r\n            <MyInput\r\n                value={post.title}\r\n                onChange={e => setPost({...post, title: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Название поста\"/>\r\n            <MyInput\r\n                value={post.body}\r\n                onChange={e => setPost({...post, body: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Описание поста\"/>\r\n            <MyButton onClick={addNewPost}>Создать пост</MyButton>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PostForm;","import React, {useEffect, useRef, useState} from 'react'\r\nimport '../styles/App.css'\r\nimport {usePosts} from \"../hooks/usePost\";\r\nimport {useFetching} from \"../hooks/useFetching\";\r\nimport PostService from \"../API/PostService\";\r\nimport {getPageCount} from \"../components/utils/pages\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport MyModal from \"../components/UI/Mymodal/MyModal\";\r\nimport PostFilter from \"../components/PostFilter\";\r\nimport PostList from \"../components/PostList\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport Pagination from \"../components/UI/Pagination/Pagination\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport {useObserver} from \"../hooks/useObserver\";\r\nimport MySelect from \"../components/UI/select/MySelect\";\r\n\r\n\r\nfunction Posts() {\r\n    const [posts, setPosts] = useState([])\r\n    const [modal, setModal] = useState(false)\r\n    const [filter, setFilter] = useState({sort: '', query: ''})\r\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\r\n    const [totalPages, setTotalPage] = useState(0)\r\n    const [limit, setLimit] = useState(10)\r\n    const [page, setPage] = useState(1)\r\n    const [fetchPosts, isPostLoading, postError] = useFetching(async () => {\r\n        const response = await PostService.getAll(limit, page)\r\n        setPosts([...posts, ...response.data])\r\n        const totalCount = response.headers['x-total-count']\r\n        setTotalPage(getPageCount(totalCount, limit))\r\n    })\r\n    const lastElement = useRef()\r\n    useObserver(lastElement, page < totalPages, isPostLoading, () => {\r\n        setPage(page + 1)\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchPosts()\r\n    }, [page, limit])\r\n\r\n    const createPost = (newPost) => {\r\n        setPosts([...posts, newPost]);\r\n        setModal(false)\r\n    }\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id));\r\n    }\r\n\r\n    const changePage = (page) => {\r\n        setPage(page)\r\n    }\r\n\r\n    return (\r\n        <div className='App'>\r\n            <MyButton style={{marginTop: '30px'}} onClick={() => setModal(true)}>\r\n                Создать пользователя\r\n            </MyButton>\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm create={createPost}/>\r\n            </MyModal>\r\n            <hr style={{margin: '15px 0'}}/>\r\n            <PostFilter\r\n                filter={filter}\r\n                setFilter={setFilter}\r\n            />\r\n            <hr style={{margin: '15px 0'}}/>\r\n            <MySelect\r\n                value={limit}\r\n                onChange={value => setLimit(value)}\r\n                defaultValue='Количество элементов на странице'\r\n                options={[\r\n                    {value: 5, name: '5'},\r\n                    {value: 10, name: '10'},\r\n                    {value: 15, name: '15'},\r\n                    {value: -1, name: 'Показать все'}\r\n                ]}\r\n            />\r\n            {postError &&\r\n            <h1>Произошла ошибка ${postError}</h1>\r\n            }\r\n            <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Список Pro JS\"/>\r\n            <div ref={lastElement} style={{height: 20, background: 'red'}}></div>\r\n            {isPostLoading &&\r\n            <div style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}><Loader/></div>\r\n\r\n            }\r\n            <Pagination\r\n                totalPages={totalPages}\r\n                page={page}\r\n                changePage={changePage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n","import About from \"../../pages/About\";\r\nimport Posts from \"../../pages/Posts\";\r\nimport PostIdPage from \"../../pages/PostIdPage\";\r\nimport Login from \"../../pages/Login\";\r\n\r\nexport const privateRoutes = [\r\n    {path: '/about', component: About, exact: true},\r\n    {path: '/posts', component: Posts, exact: true},\r\n    {path: '/posts/:id', component: PostIdPage, exact: true}\r\n]\r\n\r\nexport const publicRoutes = [\r\n    {path: '/login', component: Login, exact: true}\r\n]","import {useEffect, useRef} from \"react\";\r\n\r\nexport const useObserver = (ref,canLoad,isLoading, callback) => {\r\n    const observer = useRef()\r\n\r\n    useEffect(() => {\r\n        if (isLoading) return\r\n        if (observer.current) observer.current.disconnect()\r\n        var cb = function (entries, observer) {\r\n            if (entries[0].isIntersecting && canLoad) {\r\n               callback()\r\n            }\r\n        };\r\n        observer.current = new IntersectionObserver(cb);\r\n        observer.current.observe(ref.current)\r\n    }, [isLoading])\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport PostService from \"../API/PostService\";\r\nimport {useFetching} from \"../hooks/useFetching\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\n\r\nconst PostIdPage = () => {\r\n    const params = useParams();\r\n    const [post, setPost] = useState([])\r\n    const [fetchPostById, isLoading, error] = useFetching(async (id) => {\r\n        const response = await PostService.getById(id)\r\n        setPost(response.data)\r\n    })\r\n    const [comments, setComments] = useState([])\r\n    const [fetchCommentsPostById, isComLoading, Comerror] = useFetching(async (id) => {\r\n        const response = await PostService.getCommentsByPostId(id)\r\n        setComments(response.data)\r\n        console.log(response.data)\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchPostById(params.id)\r\n        fetchCommentsPostById(params.id)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Вы открыли страницу поста № {params.id}</h1>\r\n            {isLoading\r\n                ? <Loader/>\r\n                : <div>{post.id}. {post.title}</div>\r\n            }\r\n            <h1>Комментарии :</h1>\r\n            {/*{isComLoading*/}\r\n            {/*    ? <Loader/>*/}\r\n            {/*    : <div></div>*/}\r\n            {/*}*/}\r\n            <div>\r\n                {comments.map(comm =>\r\n                    <div key={comm.id} style={{marginTop:15}}>\r\n                        <h5>{comm.email}</h5>\r\n                        <div>{comm.body}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostIdPage;","import React, {useContext} from 'react';\r\nimport MyInput from \"../components/UI/input/MyInput\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport {AuthContext} from \"../context\";\r\n\r\nconst Login = () => {\r\n    const {isAuth, setIsAuth} = useContext(AuthContext)\r\n    const login = event => {\r\n        event.preventDefault()\r\n        setIsAuth(true)\r\n        localStorage.setItem('auth', 'true')\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Страница для логина</h1>\r\n            <form action=\"\" onSubmit={login}>\r\n                <MyInput type=\"text\" placeholder='Введите логин'/>\r\n                <MyInput type=\"password\" placeholder='Введите пароль'/>\r\n                <MyButton>Войти</MyButton>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, {useContext} from 'react';\r\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport About from \"../pages/About\";\r\nimport Posts from \"../pages/Posts\";\r\nimport Error from \"../pages/Error\";\r\nimport PostIdPage from \"../pages/PostIdPage\";\r\nimport {privateRoutes, publicRoutes} from \"./router/router\";\r\nimport {AuthContext} from \"../context\";\r\nimport Loader from \"./UI/Loader/Loader\";\r\n\r\nconst AppRouter = () => {\r\n\r\n    const {isAuth,setIsAuth,isLoading} = useContext(AuthContext)\r\n    console.log(isAuth)\r\n\r\n    if(isLoading){\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                {privateRoutes.map(route =>\r\n                    <Route\r\n                        component={route.component}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n                <Redirect to='/posts'/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route =>\r\n                    <Route\r\n                        component={route.component}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n\r\n                <Redirect to='/login'/>\r\n            </Switch>\r\n\r\n\r\n    )\r\n        ;\r\n};\r\n\r\nexport default AppRouter;\r\n{/*<Route path='/about'>*/\r\n}\r\n{/*    <About/>*/\r\n}\r\n{/*</Route>*/\r\n}\r\n{/*<Route exact path='/posts'>*/\r\n}\r\n{/*    <Posts/>*/\r\n}\r\n{/*</Route>*/\r\n}\r\n{/*<Route exact path='/posts/:id'>*/\r\n}\r\n{/*    <PostIdPage/>*/\r\n}\r\n{/*</Route>*/\r\n}\r\n{/*<Route path='/error'>*/\r\n}\r\n{/*    <Error/>*/\r\n}\r\n{/*</Route>*/\r\n}","import React, {useEffect, useState} from 'react'\nimport './styles/App.css'\nimport {BrowserRouter} from \"react-router-dom\";\nimport Navbar from \"./components/UI/Navbar/Navbar\";\nimport AppRouter from \"./components/AppRouter\";\nimport {AuthContext} from \"./context\";\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState(false)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        if (localStorage.getItem('auth')) {\n            setIsAuth(true)\n        }\n        setIsLoading(false)\n    }, [])\n    return (\n        <AuthContext.Provider value={{\n            isAuth, setIsAuth,isLoading\n        }}>\n            <BrowserRouter>\n                <Navbar/>\n                <AppRouter/>\n            </BrowserRouter>\n        </AuthContext.Provider>\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}